name: CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17.0.7' # 로컬에서 사용한 JDK 버전

      - name: Set up Gradle
        uses: gradle/gradle-build-action@v3
        with:
          gradle-version: '8.5'

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Build with Gradle
        run: ./gradlew build --stacktrace --info

      - name: Archive production artifacts
        if: success()
        uses: actions/upload-artifact@v4
        with:
          name: jar-file
          path: build/libs/ward_server-0.0.1-SNAPSHOT.jar

  deploy:
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Download build artifact
        uses: actions/download-artifact@v4
        with:
          name: jar-file

      - name: Create application.yml
        run: |
          cat <<EOF > application.yml
          spring:
            profiles:
              active: dev
            datasource:
              url: \${{ secrets.DB_URL }}
              username: \${{ secrets.DB_USERNAME }}
              password: \${{ secrets.DB_PASSWORD }}
              driver-class-name: com.mysql.cj.jdbc.Driver
            jwt:
              secretKey: \${{ secrets.JWT_SECRET_KEY }}
              password: \${{ secrets.JWT_PASSWORD }}
              accessTokenValidity: 15 # 분 단위
              refreshTokenValidity: 30 # 일 단위
            jpa:
              hibernate:
                ddl-auto: update
              show-sql: true
              database: mysql
              properties:
                hibernate:
                  show_sql: true
                  format_sql: true
                  dialect: org.hibernate.dialect.MySQLDialect
          server:
            port: \${{ secrets.SERVER_PORT }}
            ssl:
              enabled: \${{ secrets.SSL_ENABLED }}
              key-store: \${{ secrets.SSL_KEY_STORE_PATH }}
              key-store-password: \${{ secrets.SSL_KEY_STORE_PASSWORD }}
              key-store-type: PKCS12
          kakao:
            unlink-url: https://kapi.kakao.com/v1/user/unlink
            service-app-admin-key: \${{ secrets.KAKAO_SERVICE_APP_ADMIN_KEY }}
          apple:
            unlink-url: https://appleid.apple.com/auth/revoke
            client-id: \${{ secrets.APPLE_CLIENT_ID }}
            key-id: \${{ secrets.APPLE_KEY_ID }}
            team-id: \${{ secrets.APPLE_TEAM_ID }}
            private-key: \${{ secrets.APPLE_PRIVATE_KEY }}
          crawler:
            chromeDriverPath: \${{ secrets.CHROME_DRIVER_PATH }}
          logging:
            level:
              root: INFO
              com.ward.ward_server: DEBUG
              org:
                springframework:
                  web: DEBUG
                  transaction: DEBUG
                hibernate:
                  SQL: DEBUG
                  type:
                    descriptor:
                      sql: TRACE
          EOF

      - name: Copy files via SSH
        uses: appleboy/scp-action@v0.1.1
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_KEY }}
          source: "ward_server-0.0.1-SNAPSHOT.jar"
          target: "/home/ec2-user/"
          
      - name: Copy application.yml via SSH
        uses: appleboy/scp-action@v0.1.1
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_KEY }}
          source: "application.yml"
          target: "/home/ec2-user/"

      - name: Restart application on EC2
        uses: appleboy/ssh-action@v0.1.1
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_KEY }}
          script: |
            sudo systemctl disable ward_server
            sudo systemctl stop ward_server
            sudo mv /home/ec2-user/application.yml /home/ec2-user/app/
            sudo systemctl enable ward_server
            sudo systemctl start ward_server
